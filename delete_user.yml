---
- name: Delete user and always back up home directory (with timestamp)
  hosts: all
  become: true

  vars:
    backup_dir: "/root/user_backups"

  tasks:
    - name: Ensure backup directory exists
      ansible.builtin.file:
        path: "{{ backup_dir }}"
        state: directory
        mode: "0700"

    - name: Check if user home directory exists
      ansible.builtin.stat:
        path: "/home/{{ del_username }}"
      register: user_home_stat

    - name: Archive user's home directory if it exists
      ansible.builtin.shell: >
        tar czf {{ backup_dir }}/{{ del_username }}_home_backup_{{ ansible_date_time.iso8601_basic_short }}.tar.gz
        -C /home {{ del_username }}
      when: user_home_stat.stat.exists

    - name: Warn if home directory does not exist (still proceed)
      ansible.builtin.debug:
        msg: "Home directory for user {{ del_username }} does not exist. Skipping backup."
      when: not user_home_stat.stat.exists

    - name: Delete the user and remove home directory
      ansible.builtin.user:
        name: "{{ del_username }}"
        state: absent
        remove: yes

    - name: Remove sudoers file for user
      ansible.builtin.file:
        path: "/etc/sudoers.d/{{ del_username }}"
        state: absent

    - name: Remove Match User line if exists
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^Match User {{ del_username }}"
        state: absent

    - name: Remove ANSIBLE MANAGED BLOCK for user
      ansible.builtin.blockinfile:
        path: /etc/ssh/sshd_config
        marker: "# {mark} ANSIBLE MANAGED BLOCK for {{ del_username }}"
        state: absent

    - name: Restart SSH service
      ansible.builtin.service:
        name: ssh
        state: restarted
