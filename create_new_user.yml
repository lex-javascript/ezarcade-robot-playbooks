---
- name: Create user with SSH key and disable password login
  hosts: all
  become: true

  vars:
    ssh_key_bits: 2048

  tasks:
    - name: Create the user
      ansible.builtin.user:
        name: "{{ new_username }}"
        shell: /bin/bash
        create_home: yes
        groups: "{{ 'sudo' if grant_sudo | bool else omit }}"

    - name: Create .ssh directory
      ansible.builtin.file:
        path: "/home/{{ new_username }}/.ssh"
        state: directory
        owner: "{{ new_username }}"
        group: "{{ new_username }}"
        mode: "0700"

    - name: Generate SSH key pair on control node (localhost)
      delegate_to: localhost
      run_once: true
      become: false
      command: >
        ssh-keygen -t rsa -b {{ ssh_key_bits }} -f /tmp/{{ new_username }}_id_rsa -N ''

    - name: Copy public key to remote authorized_keys
      ansible.builtin.copy:
        src: "/tmp/{{ new_username }}_id_rsa.pub"
        dest: "/home/{{ new_username }}/.ssh/authorized_keys"
        owner: "{{ new_username }}"
        group: "{{ new_username }}"
        mode: "0600"

    - name: Read private key contents
      delegate_to: localhost
      run_once: true
      become: false
      ansible.builtin.slurp:
        src: "/tmp/{{ new_username }}_id_rsa"
      register: private_key_file

    - name: Show private key (save this carefully!)
      run_once: true
      become: false
      ansible.builtin.debug:
        msg: "{{ private_key_file.content | b64decode }}"

    - name: Grant sudo permissions via sudoers file if requested
      ansible.builtin.copy:
        dest: "/etc/sudoers.d/{{ new_username }}"
        content: "{{ new_username }} ALL=(ALL) NOPASSWD: ALL"
        mode: "0440"
      when: grant_sudo | bool

    - name: Remove sudoers file if sudo access not granted (cleanup)
      ansible.builtin.file:
        path: "/etc/sudoers.d/{{ new_username }}"
        state: absent
      when: not (grant_sudo | bool)

    - name: Ensure password authentication is disabled for the new user
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^Match User {{ new_username }}"
        line: "Match User {{ new_username }}"
        state: present

    - name: Add lines to disable password authentication
      ansible.builtin.blockinfile:
        path: /etc/ssh/sshd_config
        block: |
          Match User {{ new_username }}
              PasswordAuthentication no
        marker: "# {mark} ANSIBLE MANAGED BLOCK for {{ new_username }}"

    - name: Restart SSH service
      ansible.builtin.service:
        name: ssh
        state: restarted
